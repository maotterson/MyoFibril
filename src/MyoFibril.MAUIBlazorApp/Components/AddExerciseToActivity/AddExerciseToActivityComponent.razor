@using MyoFibril.Domain.Entities;
@using MyoFibril.MAUIBlazorApp.Components.DescribeExerciseComponent
@using MyoFibril.MAUIBlazorApp.Components.TypeaheadList
@using MyoFibril.MAUIBlazorApp.Services;
@using MyoFibril.MAUIBlazorApp.Services.Local;
@inject IAddExerciseService _addExerciseService

@implements IDisposable

<div class="modal fade show d-block" style="background-color: rgba(0, 0, 0, 0.5);">
    <div class="modal-dialog modal-dialog-centered bg-black">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@ExerciseName</h4>
                <div>
                    <span class="fs-5 oi oi-x col text-danger x-btn" @onclick="CloseModal"></span>
                </div>
            </div>
            <div class="modal-body overflow-auto">
                @if (_exerciseNotSelected)
                {
                    <TypeaheadListComponent></TypeaheadListComponent>
                }
                else
                {
                    <DescribeExerciseComponent SelectedExerciseType="SelectedExercise"></DescribeExerciseComponent>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private string ExerciseName
    {
        get
        {
            if (_exerciseNotSelected) return "Add Exercise";
            return SelectedExercise.Name;
        }
    }
    private bool _exerciseNotSelected => !_addExerciseService.IsExerciseSelected;
    private ExerciseEntity SelectedExercise => _addExerciseService.SelectedExercise;
    protected override void OnInitialized()
    {
        _addExerciseService.OnModalStateChanged += StateHasChanged;
    }
    void IDisposable.Dispose()
    {
        _addExerciseService.OnModalStateChanged -= StateHasChanged;
    }
    private void CloseModal()
    {
        _addExerciseService.CloseModal();
    }

}
