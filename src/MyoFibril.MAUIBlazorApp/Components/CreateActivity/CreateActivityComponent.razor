@using MyoFibril.Contracts.WebAPI.Models;
@using MyoFibril.MAUIBlazorApp.Components.AddExerciseToActivity
@using MyoFibril.MAUIBlazorApp.Components.ExerciseSummary;
@using MyoFibril.MAUIBlazorApp.Services.UI;
@inject CreateActivityViewModel _createActivityViewModel
@inject IModalService _modalService

<h1>Create New Activity</h1>

@if (_modalOpen)
{
    <AddExerciseToActivityComponent></AddExerciseToActivityComponent>
}

<div>
    <span>Name</span>
    <input @bind="InputName" />

    @foreach (var exercise in _exercises)
    {
        <ExerciseSummaryComponent Exercise="exercise"></ExerciseSummaryComponent>
    }

    <!-- Add button to add a new input -->
    <button class="btn btn-primary" @onclick="AddExerciseButtonClicked">Add Exercise</button>

    <button @onclick="CreateButtonClicked">Create</button>
</div>

@code {
    private bool _modalOpen => _modalService.IsModalOpen();
    private List<ExerciseDto> _exercises => _createActivityViewModel.Exercises;
    public string InputName { get; set; } = string.Empty;

    protected override void OnInitialized()
    {
        _modalService.OnModalStateChanged += StateHasChanged;
    }
    private void AddExerciseButtonClicked()
    {
        _modalService.OpenModal();
    }
    
    
    private async Task CreateButtonClicked()
    {
        await _createActivityViewModel.CreateActivity(InputName);
        StateHasChanged();
    }
}
