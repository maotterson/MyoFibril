@page "/NewActivity"
@attribute [AuthorizeAttribute]
@implements IDisposable

@using MyoFibril.MAUIBlazorApp.Components.CreateActivity;
@using MyoFibril.MAUIBlazorApp.Services;
@using MyoFibril.Contracts.WebAPI.CreateActivity;
@using MyoFibril.MAUIBlazorApp.Components
@using MyoFibril.MAUIBlazorApp.Services.Api;
@using MyoFibril.MAUIBlazorApp.Services.Local;
@using MyoFibril.MAUIBlazorApp.Auth;

@inject INewActivityService _newActivityService
@inject IBuildActivityService _buildActivityService;
@inject CreateActivityViewModel _createActivityViewModel

<CreateActivityComponent></CreateActivityComponent>

@if (_createdActivity is not null)
{
    <p>Activity created!</p>
    <div>
        <p>>@_createdActivity.Id</p>
        <p>@_createdActivity.Name</p>
        <p>@_createdActivity.StravaActivity.StartDateLocal</p>
    </div>
}

@if (_error is not null)
{
    <p>@_error</p>
}


@code{
    private CreateActivityResponse? _createdActivity;
    private string _error;

    protected override void OnInitialized()
    {
        _buildActivityService.OnBuildActivityStateChanged += StateHasChanged;
    }

    void IDisposable.Dispose()
    {
        _buildActivityService.OnBuildActivityStateChanged -= StateHasChanged;
    }
}